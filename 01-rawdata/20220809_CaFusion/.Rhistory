#intensity = ifelse(!press, intensity + 0.01, intensity)
) %>%
ggplot(
aes(
x = watch,
y = intensity,
group = filename,
color = as.factor(press)
)
) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm", se=FALSE) +
scale_color_discrete() +
facet_wrap(~id, ncol = 1, scales = "free_y") +
theme_pubr() +
#lims(
#  x = c(300, 900),
#  y = c(-0.01, 0.02)
#) +
labs(
x = "Time (s)",
y = "Fraction fused"
)
ggsave(here("20220822_normd_traces.pdf"), height = 6, width = 2)
ggsave(here("20220822_normd_traces.pdf"), height = 6, width = 3)
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = id,
label = filename,
#color = date
fill = id
)
) +
facet_wrap(~press, ncol=2) +
geom_col(
aes(y = mean_slope)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
theme_pubclean() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (%/s)"
)
ggsave(here("20220822_normd_slopes.pdf"), height = 4, width = 6)
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = press,
label = filename,
#color = date
fill = press
)
) +
facet_wrap(~id, ncol=2) +
geom_col(
aes(y = mean_slope)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
theme_pubclean() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (%/s)"
)
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = id,
label = filename,
#color = date
fill = id
)
) +
facet_wrap(~press, ncol=2) +
geom_col(
aes(y = mean_slope)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
theme_pubclean() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (%/s)"
)
ggsave(here("20220822_normd_slopes.pdf"), height = 4, width = 6)
# plot actual traces
kindat_alg %>%
group_by(filename, id, press, date) %>%
filter(between(watch, kin_win[[1]], kin_win[[2]])) %>%
mutate(watch = watch-min(watch)) %>%
# fresh runs only
filter(
((id == "SAPE") & (date == "20220818")) |
((id == "SAPPE") & (date == "20220817"))
) %>%
# only to 100 bar
filter(press <= 100) %>%
# rolling average to compress the data 5?-fold
mutate(bin = as.integer(row_number()/5)) %>%
group_by(id, press, filename, bin) %>%
summarize(across(c(watch, intensity), mean)) %>%
# calc linregs to shift baseline
mutate(
linreg = cur_data() %>%
lm(intensity ~ watch, .) %>%
tidy() %>%
list()
) %>%
unnest(linreg) %>%
mutate(term = c("(Intercept)" = "xcept", "watch" = "slope")[term]) %>%
pivot_wider(id_cols = c(group_cols(), "watch", "intensity"), names_from = "term", values_from = "estimate") %>%
group_by(id, press) %>%
# only show the higher-slope replicate
filter(slope == max(slope)) %>%
mutate(
intensity = intensity - xcept#,
#intensity = ifelse(!press, intensity + 0.01, intensity)
) %>%
ggplot(
aes(
x = watch,
y = intensity,
group = filename,
color = id
)
) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm", se=FALSE) +
scale_color_discrete() +
facet_wrap(~press, ncol = 1, scales = "free_y") +
theme_pubr() +
#lims(
#  x = c(300, 900),
#  y = c(-0.01, 0.02)
#) +
labs(
x = "Time (s)",
y = "Fraction fused"
)
chroma = c("SAPE" = "#BBBDBF", "SAPPE" = "#BAE4B3")
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = id,
label = filename,
#color = date
fill = id
)
) +
facet_wrap(~press, ncol=2) +
geom_col(
aes(y = mean_slope)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
scale_fill_manual(values = chroma) +
theme_pubclean() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (%/s)"
)
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = id,
label = filename,
#color = date
fill = id
)
) +
facet_wrap(~press, ncol=2) +
geom_col(
aes(y = mean_slope*100)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
scale_fill_manual(values = chroma) +
theme_pubclean() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (%/s)"
)
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = id,
label = filename,
#color = date
fill = id
)
) +
facet_wrap(~press, ncol=2) +
geom_col(
aes(y = mean_slope*100)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
scale_fill_manual(values = chroma) +
theme_pubclean() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (percent/s)"
)
ggsave(here("20220822_normd_slopes.pdf"), height = 4, width = 6)
# plot actual traces
kindat_alg %>%
group_by(filename, id, press, date) %>%
filter(between(watch, kin_win[[1]], kin_win[[2]])) %>%
mutate(watch = watch-min(watch)) %>%
# fresh runs only
filter(
((id == "SAPE") & (date == "20220818")) |
((id == "SAPPE") & (date == "20220817"))
) %>%
# only to 100 bar
filter(press <= 100) %>%
# rolling average to compress the data 5?-fold
mutate(bin = as.integer(row_number()/5)) %>%
group_by(id, press, filename, bin) %>%
summarize(across(c(watch, intensity), mean)) %>%
# calc linregs to shift baseline
mutate(
linreg = cur_data() %>%
lm(intensity ~ watch, .) %>%
tidy() %>%
list()
) %>%
unnest(linreg) %>%
mutate(term = c("(Intercept)" = "xcept", "watch" = "slope")[term]) %>%
pivot_wider(id_cols = c(group_cols(), "watch", "intensity"), names_from = "term", values_from = "estimate") %>%
group_by(id, press) %>%
# only show the higher-slope replicate
filter(slope == max(slope)) %>%
mutate(
intensity = intensity - xcept#,
#intensity = ifelse(!press, intensity + 0.01, intensity)
) %>%
ggplot(
aes(
x = watch,
y = intensity,
group = filename,
color = id
)
) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm", se=FALSE) +
scale_color_manual(values = chroma) +
facet_wrap(~press, ncol = 2) +
theme_pubr() +
#lims(
#  x = c(300, 900),
#  y = c(-0.01, 0.02)
#) +
labs(
x = "Time (s)",
y = "Fraction fused"
)
ggsave(here("20220822_normd_traces.pdf"), height = 6, width = 3)
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = id,
label = filename,
#color = date
fill = id
)
) +
facet_wrap(~press, ncol=2) +
geom_col(
aes(y = mean_slope*100)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
scale_fill_manual(values = chroma) +
theme_pubr() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (percent/s)"
)
ggsave(here("20220822_normd_slopes.pdf"), height = 4, width = 6)
ggsave(here("20220822_normd_traces.pdf"), height = 4, width = 6)
# plot actual traces
kindat_alg %>%
group_by(filename, id, press, date) %>%
filter(between(watch, kin_win[[1]], kin_win[[2]])) %>%
mutate(watch = watch-min(watch)) %>%
# fresh runs only
filter(
((id == "SAPE") & (date == "20220818")) |
((id == "SAPPE") & (date == "20220817"))
) %>%
# only to 100 bar
filter(press <= 100) %>%
# rolling average to compress the data 5?-fold
mutate(bin = as.integer(row_number()/5)) %>%
group_by(id, press, filename, bin) %>%
summarize(across(c(watch, intensity), mean)) %>%
# calc linregs to shift baseline
mutate(
linreg = cur_data() %>%
lm(intensity ~ watch, .) %>%
tidy() %>%
list()
) %>%
unnest(linreg) %>%
mutate(term = c("(Intercept)" = "xcept", "watch" = "slope")[term]) %>%
pivot_wider(id_cols = c(group_cols(), "watch", "intensity"), names_from = "term", values_from = "estimate") %>%
group_by(id, press) %>%
# only show the higher-slope replicate
filter(slope == max(slope)) %>%
mutate(
intensity = intensity - xcept#,
#intensity = ifelse(!press, intensity + 0.01, intensity)
) %>%
ggplot(
aes(
x = watch,
y = intensity,
group = filename,
color = id
)
) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm", se=FALSE) +
scale_color_manual(values = chroma) +
facet_wrap(~press, ncol = 2) +
theme_pubr() +
#lims(
#  x = c(300, 900),
#  y = c(-0.01, 0.02)
#) +
labs(
x = "Time (s)",
y = "Fraction fused"
)
ggsave(here("20220822_normd_traces.pdf"), height = 4, width = 6)
ggsave(here("20220822_normd_traces.pdf"), height = 3, width = 6)
# plot actual traces
kindat_alg %>%
group_by(filename, id, press, date) %>%
filter(between(watch, kin_win[[1]], kin_win[[2]])) %>%
mutate(watch = watch-min(watch)) %>%
# fresh runs only
filter(
((id == "SAPE") & (date == "20220818")) |
((id == "SAPPE") & (date == "20220817"))
) %>%
# only to 100 bar
filter(press <= 100) %>%
# rolling average to compress the data 5?-fold
mutate(bin = as.integer(row_number()/5)) %>%
group_by(id, press, filename, bin) %>%
summarize(across(c(watch, intensity), mean)) %>%
# calc linregs to shift baseline
mutate(
linreg = cur_data() %>%
lm(intensity ~ watch, .) %>%
tidy() %>%
list()
) %>%
unnest(linreg) %>%
mutate(term = c("(Intercept)" = "xcept", "watch" = "slope")[term]) %>%
pivot_wider(id_cols = c(group_cols(), "watch", "intensity"), names_from = "term", values_from = "estimate") %>%
group_by(id, press) %>%
# only show the higher-slope replicate
filter(slope == max(slope)) %>%
mutate(
intensity = intensity - xcept#,
#intensity = ifelse(!press, intensity + 0.01, intensity)
) %>%
ggplot(
aes(
x = watch,
y = intensity,
group = filename,
color = id
)
) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm", se=FALSE) +
scale_color_manual(values = chroma) +
facet_wrap(~press, ncol = 2) +
theme_pubr() +
#lims(
#  x = c(300, 900),
#  y = c(-0.01, 0.02)
#) +
theme(legend.position = "none") +
labs(
x = "Time (s)",
y = "Fraction fused"
)
ggsave(here("20220822_normd_traces.pdf"), height = 3, width = 6)
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = id,
label = filename,
#color = date
fill = id
)
) +
facet_wrap(~press, ncol=2) +
geom_col(
aes(y = mean_slope*100)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
scale_fill_manual(values = chroma) +
theme_pubr() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (percent/s)"
)
ggsave(here("20220822_normd_slopes.pdf"), height = 3, width = 6)
# plot those slopes!
slopes %>%
group_by(id, press) %>%
mutate(
mean_slope = mean(estimate),
mean_slope = ifelse(row_number()>1, NA, mean_slope)
) %>%
ggplot(
aes(
x = id,
label = filename,
#color = date
fill = id
)
) +
facet_wrap(~press, ncol=2) +
geom_col(
aes(y = mean_slope)
) +
#geom_point(
#  aes(y = estimate),
#  color="black"
#) +
scale_fill_manual(values = chroma) +
theme_pubr() +
theme(legend.position = "none") +
labs(
y = "Fusion rate (fraction/s)"
)
ggsave(here("20220822_normd_slopes.pdf"), height = 3, width = 3)
